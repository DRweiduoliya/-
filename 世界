package Hlw11;

import java.util.Scanner;

//吃货联盟订餐系统
public class Hlw111 {
	public static void main(String[] args) {
		// 数据主题
		String[] names = new String[4];// 订餐人
		String[] dishMegs = new String[4];// 所定产品信息
		int[] times = new int[4];// 送餐时间
		String[] addresses = new String[4];// 送餐地址
		int[] states = new int[4];// 订单状态0：已预定1：已完成
		double[] sumPrices = new double[4];// 总金额
		// 初始化数据
		names[0] = "张庆";
		dishMegs[0] = "咖喱饭";
		times[0] = 13;
		addresses[0] = "航天桥";
		states[0] = 0;
		sumPrices[0] = 24.0;

		names[1] = "绝尘";
		dishMegs[1] = "披萨 2份";
		times[1] = 11;
		addresses[1] = "航天桥";
		states[1] = 0;
		sumPrices[1] = 78;
		// 餐品信息
		// 餐品名
		String[] dishNames = { "咖喱饭", "披萨", "蛋炒饭" };
		// 餐品单价
		double[] prices = { 24.0, 39.0, 10.0 };
		// 点赞数
		int[] dianzan = new int[3];
		Scanner input = new Scanner(System.in);
		// 循环（do while）
		int num = -1;
		// 循环操作
		do {
			
			
			
			
			
			
			// 显示主菜单
			System.out.println("*********************");
			System.out.println("1.我要订餐");
			System.out.println("2.查看餐袋");
			System.out.println("3.删除订单");
			System.out.println("4.签收订单");
			System.out.println("5.我要点赞");
			System.out.println("6.退出系统");
			// 提示用户输入功能编号，并执行相应功能
			System.out.print("请输入编号: ");
			int bianhao = input.nextInt();
			//
			boolean isadd = false;// 记录插入成功
			switch (bianhao) {
			
			
			
			
			
			
			
			
			
			case 1:
				// 我要订餐
				System.out.println("*****我要订餐*****");
				for (int i = 0; i < names.length; i++) {
					if (names[i] == null) {
						isadd = true;// 记录已找到
						System.out.println("序号\t餐品名\t单价\t点赞数");
						for (int w = 0; w < dishNames.length; w++) {
							String price = prices[w] + "(元)";
							String dianzans = dianzan[w] + "赞";
							System.out.println((w + 1) + "\t" + dishNames[w] + "\t" + price + "\t" + dianzans);
						}
						System.out.print("请输入餐品编号:");
						// cpbh =餐品编号
						int cpbh = input.nextInt();
						System.out.print("请选择所定份数: ");
						// cpfs =餐品分数

						long cpfs = input.nextLong();
						String dishMeg = dishNames[cpbh - 1] + " " + cpfs + "份";
						// 订餐人信息
						System.out.print("请输入姓名: ");
						String name = input.next();
						// 送餐时间
						System.out.print("请输入送餐时间(10~20)点: ");
						int scsj = input.nextInt();
						while (scsj < 10 || scsj > 20) {
							System.out.println("输入错误,请从新输入时间");
							scsj = input.nextInt();
						}
						// 送餐地址
						System.out.print("请输入地址: ");
						String c = input.next();
						// 总金额
						double zje = prices[cpbh - 1] * cpfs;
						// 送餐费
						int scf = 6;
						if (zje > 50) {

							scf = 0;
							zje -= scf;
						}
						System.out.println("订餐成功！");
						System.out.println("您订的是:" + dishMeg);
						System.out.println("订餐人:" + name);
						System.out.println("送餐时间:" + scsj);
						System.out.println("送餐地址:" + c);
						System.out.println("餐费:" + zje);
						System.out.println("送餐费:" + scf);
						System.out.println("总金额:" + (zje + scf) + "元");
						dishMegs[i] = dishMeg;
						names[i] = name;
						times[i] = scsj;
						addresses[i] = c;
						sumPrices[i] = zje + scf;

						break;

					}
				}
				if (!isadd) {
					System.out.println("对不起,你的餐袋已满");
				}

				break;
		
			
			
			
			
			
			
			
			
			case 2:
				// 查看餐单
				System.out.println("********查看餐袋*********");
				//
				System.out.println("序号\t订餐人\t餐品信息\t送餐日期\t送餐地址\t总金额\t订单状态");
				for (int i = 0; i < names.length; i++) {

					if (names[i] != null) {

						// 时间
						String time = times[i] + "点";
						// 将价格转换成字符串类型
						String sum = sumPrices[i] + "元";
						// 判断订单状态
						String state = states[i] == 0 ? "已预定" : "已完成";
						// 输出这条订单信息
						System.out.println((i + 1) + "\t" + names[i] + "\t" + dishMegs[i] + "\t" + time + "\t"
								+ addresses[i] + "\t" + sum + "\t" + state);
					}
				}
				break;
			
			
			
			
			
			
			
			
			
			
			
			case 3:

				// 删除订单
				System.out.println("***删除订单***");
				System.out.print("请输入要删除的订单序号:");
				int delId = input.nextInt();
				boolean isDelFind = false;
				for (int i = 0; i < names.length; i++) {
					// 状态值为已完成 序号值为用户输入的序号：可删除
					// 状态值为已预定 序号值为用户输入的序号：不可删除
					if (names[i] != null && states[i] == 1 && delId == i + 1) {
						isDelFind = true;
						// 执行删除操作:删除位置后的元素依次前移
						for (int j = delId - 1; j < names.length - 1; j++) {
							names[j] = names[j + 1];
							dishMegs[j] = dishMegs[j + 1];
							times[j] = times[j + 1];
							addresses[j] = addresses[j + 1];
							states[j] = states[j + 1];
						}
						// 最后一位清空
						names[names.length - 1] = null;
						dishMegs[names.length - 1] = null;
						times[names.length - 1] = 0;
						addresses[names.length - 1] = null;
						states[names.length - 1] = 0;

						System.out.println("删除订单成功！");
						break;
					} else if (names[i] != null && states[i] == 0 && delId == i + 1) {
						System.out.println("您选择的订单未签收，不能删除！");
						isDelFind = true;
						break;
					}
				}

				// 未找到该序号的订单：不能删除
				if (!isDelFind) {
					System.out.println("您要删除的订单不存在！");
				}
				break;
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			case 4:
				// 签收订单
				System.out.println("*********签收订单**********");
				System.out.println("请输入要签收的订单序号: ");
				int signOrderId = input.nextInt();
				boolean tj = false;
				// 查找这条订单(循环遍历)
				for (int i = 0; i < names.length; i++) {
					// 找到，状态是已签收；提示不能再次签收
					if (names[i] != null && states[i] == 1 && signOrderId == i + 1) {
						System.out.println("对不起,订单已签收,不能再次签收");
						tj = true;
						break;
						// 找到，状态是已预定(没有完成签收)，可以签收
					} else if (names[i] != null && states[i] == 0 && signOrderId == i + 1) {
						states[i] = 1;
						System.out.println("订单已完成签收");
						tj = true;
						break;
					}
				} // 条件判断，如果没有找到这条订单，才去提示没有找到
				if (!tj) {
					System.out.println("你输入的订单没有找到:");
				}
				break;
			
			
			
			
			
			
			
			
			
			
			case 5:
				// 我要点赞

		System.out.println("**********我要点赞*********");
		for (int w = 0; w < dishNames.length; w++) {
			String price = prices[w] + "(元)";
			String dianzans = dianzan[w] + "赞";
			System.out.println((w + 1) + "\t" + dishNames[w] + "\t" + price + "\t" + dianzans);
		}      System.out.println("请输入要点赞的餐品序号: ");
		    int dianzanm=input.nextInt();
		    dianzan[dianzanm-1]++;
		    System.out.println("点赞成功");
			System.out.println(dishNames[dianzanm-1]+" "+dianzan[dianzanm-1]+"赞" );
			
			
			
			
			
			
			
			
			
			
			
			
			case 6:
				// 退出系统
				break;
			default:
				System.out.println();
				break;
			}
			// 当用户输入1-5之外的数字退出循环
			if (bianhao < 1 || bianhao > 5) {
				break;
			} else {
				System.out.print("输入0返回: ");
				num = input.nextInt();
			}
			// 提示输入0返回

		} while (num == 0);
		System.out.println("谢谢使用，欢迎下次光临！");

	}

}
